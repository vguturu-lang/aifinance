
import React, { useState, useCallback } from 'react';
import type { AnalystReport } from './types';
import { generateAnalystReport } from './services/geminiService';
import { SearchInput } from './components/SearchInput';
import { ReportView } from './components/ReportView';
import { LoadingSpinner } from './components/LoadingSpinner';
import { ErrorDisplay } from './components/ErrorDisplay';
import { WelcomeDisplay } from './components/WelcomeDisplay';

const App: React.FC = () => {
  const [report, setReport] = useState<AnalystReport | null>(null);
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [error, setError] = useState<string | null>(null);

  const handleSearch = useCallback(async (ticker: string) => {
    if (!ticker) return;
    setIsLoading(true);
    setError(null);
    setReport(null);
    try {
      const result = await generateAnalystReport(ticker);
      setReport(result);
    } catch (err) {
      if (err instanceof Error) {
        setError(err.message);
      } else {
        setError("An unknown error occurred.");
      }
    } finally {
      setIsLoading(false);
    }
  }, []);

  return (
    <div className="min-h-screen flex flex-col font-sans p-4 sm:p-6 lg:p-8">
      <header className="w-full max-w-5xl mx-auto mb-8">
        <div className="flex flex-col sm:flex-row justify-between items-center gap-4">
          <div className="flex items-center gap-3">
            <svg xmlns="http://www.w3.org/2000/svg" className="h-8 w-8 text-brand-primary" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-1.03 15.03L5.5 11.5l1.41-1.41L11 14.17l5.09-5.09L17.5 10.5l-6.53 6.53z" />
            </svg>
            <h1 className="text-2xl sm:text-3xl font-bold text-brand-secondary tracking-tight">AI Financial Analyst</h1>
          </div>
          <div className="w-full sm:w-auto">
             <SearchInput onSearch={handleSearch} isLoading={isLoading} />
          </div>
        </div>
      </header>
      
      <main className="flex-grow w-full max-w-5xl mx-auto">
        {isLoading && <LoadingSpinner />}
        {error && <ErrorDisplay message={error} />}
        {!isLoading && !error && !report && <WelcomeDisplay />}
        {!isLoading && !error && report && <ReportView report={report} />}
      </main>

      <footer className="w-full max-w-5xl mx-auto mt-12 text-center text-brand-muted text-xs">
        <p>Disclaimer: All financial data and analysis are generated by an AI and are for informational purposes only. Not financial advice.</p>
        <p>&copy; {new Date().getFullYear()} AI Financial Analyst. All Rights Reserved.</p>
      </footer>
    </div>
  );
};

export default App;
